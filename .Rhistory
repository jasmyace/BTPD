}
dev.off()
getStatus(219)
getStatus <- function(userID){
# userID <- 100
#   ---- Get the master cell status and master grid.
assign <- getCellStatus()
grid <- readOGR("//lar-file-srv/Data/BTPD_2016/Analysis/data/Shapefiles/BTPD_Grid_CO_Ranked","BTPD_Grid_CO_Ranked",verbose=FALSE)
names <- read.csv("//lar-file-srv/Data/BTPD_2016/Analysis/Database/tblNames.csv",stringsAsFactors=FALSE)
#   ---- Get the first name associated with the userID.
checkUser(userID)
firstName <- names[names$userID == userID,]$FirstName
#   ---- Get the different types of grid cells, based on this userID.
singly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0,]
doubly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
buffer <- assign[assign$buffUserID == userID & !is.na(assign$buffUserID),]
closed <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$doneStatus == 1,]
#   ---- Manipulate the results of querying into a useful form.
singly <- data.frame(Grid_ID=singly[,c('Grid_ID')])
if(nrow(singly) > 0){singly$singly <- 1}
doubly <- data.frame(Grid_ID=doubly[,c('Grid_ID')])
if(nrow(doubly) > 0){doubly$doubly <- 1}
buffer <- data.frame(Grid_ID=buffer[,c('Grid_ID')])
if(nrow(buffer) > 0){buffer$buffer <- 1}
closed <- data.frame(Grid_ID=closed[,c('Grid_ID')])
if(nrow(closed) > 0){closed$closed <- 1}
#   ---- Add in Grid_IDs for which we have information, based on this userID.
#   ---- Also, report cells of interest to the user.
if(nrow(singly) > 0){
grid@data <- merge(grid@data,singly,by=c('Grid_ID'),all.x=TRUE)
if(nrow(singly) == 1){
cat(paste0("Your list of singly-digitized cells includes Grid_ID ",singly$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of singly-digitized cells includes Grid_IDs ",paste0(singly$Grid_ID,collapse=", "),".\n"))
}
cat(paste0(singly$Grid_ID,collapse=", "))
}
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly,by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly) == 1){
cat(paste0("Your list of doubly-digitized cells includes Grid_ID ",doubly$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of doubly-digitized cells includes Grid_IDs ",paste0(doubly$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(buffer) > 0){
grid@data <- merge(grid@data,buffer,by=c('Grid_ID'),all.x=TRUE)
if(nrow(buffer) == 1){
cat(paste0("Your list of buffer cells includes Grid_ID ",buffer$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of buffer cells includes Grid_IDs ",paste0(buffer$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) > 0){
grid@data <- merge(grid@data,closed,by=c('Grid_ID'),all.x=TRUE)
if(nrow(closed) == 1){
cat(paste0("Your list of closed cells includes Grid_ID ",closed$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of closed cells includes Grid_IDs ",paste0(closed$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) == 0 & nrow(buffer) == 0 & nrow(doubly) == 0 & nrow(singly) == 0){
cat("You have nothing to report.  Your Cell's map will be blank.")
}
grid@data[is.na(grid@data)] <- 0
#   ---- Make a simple plot.
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","yellow","green"))
}
dev.off9)
dev.off()
getStatus(219)
head(doubly)
doubly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
head(doubly)
doubly <- assign[( assign$digiUserID == userID & !is.na(assign$digiUserID) ) |
( assign$digiPartner == userID & !is.na(assign$digiPartner) ) ) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
( assign$digiUserID == userID & !is.na(assign$digiUserID) )
doubly <- assign[( ( assign$digiUserID == userID  & !is.na(assign$digiUserID ) ) |
( assign$digiPartner == userID & !is.na(assign$digiPartner) ) ) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
doubly
doubly$digiUserID == userID
test <- data.frame(Grid_ID=c(1,2,3,4,5),digiUserID=c(100,555,555,100,666),partner=c(345,776,100,345,100))
test
test[test$digiUserID == userID,] <- 1
test
test <- data.frame(Grid_ID=c(1,2,3,4,5),digiUserID=c(100,555,555,100,666),partner=c(345,776,100,345,100))
doubly[doubly$digiUserID == userID,]$type <- 1
doubly[doubly$digiUserID == userID,]$type
doubly <- data.frame(Grid_ID=c(1,2,3,4,5),digiUserID=c(100,555,555,100,666),partner=c(345,776,100,345,100))
doubly
doubly$type <- rep(0,nrow(doubly))
doubly
doubly[doubly$digiUserID == userID,]$type <- 1
doubly
doubly[doubly$digiPartner == userID,]$type <- 2
doubly <- data.frame(Grid_ID=c(1,2,3,4,5),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$type <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$type <- 1
doubly[doubly$digiPartner == userID,]$type <- 2
doubly
doubly <- data.frame(Grid_ID=doubly[,c('Grid_ID')],digiUserID=doubly[,c('digiUserID')],digiPartner=doubly[,c('digiPartner')])
if(nrow(doubly) > 0){
#   ---- Identify if a user is primary or secondary for doubly-sampled cells.
#doubly <- data.frame(Grid_ID=c(1,2,3,4,5),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$doubly <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$doubly <- 1
doubly[doubly$digiPartner == userID,]$doubly <- 2
}
doubly
nrow(doubly) > 0
grid@data <- merge(grid@data,doubly[,c('doubly')],by=c('Grid_ID'),all.x=TRUE)
head(assign)
sample(assign)
sample(assign,5)
sample(assign$Grid_ID,5)
doubly <- data.frame(Grid_ID=c("CO159922","CO114951","CO124423","CO142881","CO134755"),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$doubly <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$doubly <- 1
doubly[doubly$digiPartner == userID,]$doubly <- 2
doubly
nrow(doubly) > 0
grid@data <- merge(grid@data,doubly[,c('doubly')],by=c('Grid_ID'),all.x=TRUE)
head(doubly)
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
head(grid@data)
doubly
nrow(doubly[doubly$doubly == 1]) == 1
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly == 1,]$Grid_ID[1],".\n"))
doubly[doubly == 1,]
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
nrow(doubly[doubly$doubly == 1]) > 1
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
} else if(nrow(doubly[doubly$doubly == 2]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
}
if(nrow(doubly[doubly$doubly == 2]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
doubly[doubly$doubly == 2,]
oubly[doubly$doubly == 2,]$Grid_ID[1]
doubly[doubly$doubly == 2,]$Grid_ID[1]
doubly[doubly$doubly == 2,]$Grid_ID
paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", ")
nrow(doubly[doubly$doubly == 2])
nrow(doubly[doubly$doubly == 1])
nrow(doubly[doubly$doubly == 1,])
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
}
if(nrow(doubly[doubly$doubly == 2,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
#   ---- Get the master cell status and master grid.
assign <- getCellStatus()
grid <- readOGR("//lar-file-srv/Data/BTPD_2016/Analysis/data/Shapefiles/BTPD_Grid_CO_Ranked","BTPD_Grid_CO_Ranked",verbose=FALSE)
names <- read.csv("//lar-file-srv/Data/BTPD_2016/Analysis/Database/tblNames.csv",stringsAsFactors=FALSE)
#   ---- Get the first name associated with the userID.
checkUser(userID)
firstName <- names[names$userID == userID,]$FirstName
#   ---- Get the different types of grid cells, based on this userID.
singly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0,]
doubly <- assign[( ( assign$digiUserID == userID  & !is.na(assign$digiUserID ) ) |
( assign$digiPartner == userID & !is.na(assign$digiPartner) ) ) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
buffer <- assign[assign$buffUserID == userID & !is.na(assign$buffUserID),]
closed <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$doneStatus == 1,]
#   ---- Manipulate the results of querying into a useful form.
singly <- data.frame(Grid_ID=singly[,c('Grid_ID')])
if(nrow(singly) > 0){singly$singly <- 1}
doubly <- data.frame(Grid_ID=c("CO159922","CO114951","CO124423","CO142881","CO134755"),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly <- data.frame(Grid_ID=doubly[,c('Grid_ID')],digiUserID=doubly[,c('digiUserID')],digiPartner=doubly[,c('digiPartner')])
if(nrow(doubly) > 0){
#   ---- Identify if a user is primary or secondary for doubly-sampled cells.
#doubly <- data.frame(Grid_ID=c("CO159922","CO114951","CO124423","CO142881","CO134755"),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$doubly <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$doubly <- 1
doubly[doubly$digiPartner == userID,]$doubly <- 2
}
buffer <- data.frame(Grid_ID=buffer[,c('Grid_ID')])
if(nrow(buffer) > 0){buffer$buffer <- 1}
closed <- data.frame(Grid_ID=closed[,c('Grid_ID')])
if(nrow(closed) > 0){closed$closed <- 1}
#   ---- Add in Grid_IDs for which we have information, based on this userID.
#   ---- Also, report cells of interest to the user.
if(nrow(singly) > 0){
grid@data <- merge(grid@data,singly,by=c('Grid_ID'),all.x=TRUE)
if(nrow(singly) == 1){
cat(paste0("Your list of singly-digitized cells includes Grid_ID ",singly$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of singly-digitized cells includes Grid_IDs ",paste0(singly$Grid_ID,collapse=", "),".\n"))
}
cat(paste0(singly$Grid_ID,collapse=", "))
}
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
}
if(nrow(doubly[doubly$doubly == 2,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(buffer) > 0){
grid@data <- merge(grid@data,buffer,by=c('Grid_ID'),all.x=TRUE)
if(nrow(buffer) == 1){
cat(paste0("Your list of buffer cells includes Grid_ID ",buffer$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of buffer cells includes Grid_IDs ",paste0(buffer$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) > 0){
grid@data <- merge(grid@data,closed,by=c('Grid_ID'),all.x=TRUE)
if(nrow(closed) == 1){
cat(paste0("Your list of closed cells includes Grid_ID ",closed$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of closed cells includes Grid_IDs ",paste0(closed$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) == 0 & nrow(buffer) == 0 & nrow(doubly) == 0 & nrow(singly) == 0){
cat("You have nothing to report.  Your Cell's map will be blank.")
}
grid@data[is.na(grid@data)] <- 0
#   ---- Make a simple plot.
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","yellow","green"))
head(grid)
head(grid@data)
table(grid@data$doubly)
#   ---- Make a simple plot.
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"))
#   ---- Make a simple plot.
par(mar=c(rep(0.1)))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"))
#   ---- Make a simple plot.
par(mar=c(rep(0.1,4)))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"))
#   ---- Make a simple plot.
par(mar=c(rep(0.5,4)))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.8)
#   ---- Make a simple plot.
par(mar=c(rep(0.8,4)))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
head(par)
help(par)
#   ---- Make a simple plot.
par(mar=c(rep(0.5,0.5,1.0,0.5)))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
#   ---- Make a simple plot.
par(mar=c(0.5,0.5,1.0,0.5))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
#   ---- Make a simple plot.
par(mar=c(0.5,0.5,2.0,0.5))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
getStatus <- function(userID){
# userID <- 100
#   ---- Get the master cell status and master grid.
assign <- getCellStatus()
grid <- readOGR("//lar-file-srv/Data/BTPD_2016/Analysis/data/Shapefiles/BTPD_Grid_CO_Ranked","BTPD_Grid_CO_Ranked",verbose=FALSE)
names <- read.csv("//lar-file-srv/Data/BTPD_2016/Analysis/Database/tblNames.csv",stringsAsFactors=FALSE)
#   ---- Get the first name associated with the userID.
checkUser(userID)
firstName <- names[names$userID == userID,]$FirstName
#   ---- Get the different types of grid cells, based on this userID.
singly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0,]
doubly <- assign[( ( assign$digiUserID == userID  & !is.na(assign$digiUserID ) ) |
( assign$digiPartner == userID & !is.na(assign$digiPartner) ) ) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
buffer <- assign[assign$buffUserID == userID & !is.na(assign$buffUserID),]
closed <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$doneStatus == 1,]
#   ---- Manipulate the results of querying into a useful form.
singly <- data.frame(Grid_ID=singly[,c('Grid_ID')])
if(nrow(singly) > 0){singly$singly <- 1}
doubly <- data.frame(Grid_ID=doubly[,c('Grid_ID')],digiUserID=doubly[,c('digiUserID')],digiPartner=doubly[,c('digiPartner')])
if(nrow(doubly) > 0){
#   ---- Identify if a user is primary or secondary for doubly-sampled cells.
#doubly <- data.frame(Grid_ID=c("CO159922","CO114951","CO124423","CO142881","CO134755"),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$doubly <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$doubly <- 1
doubly[doubly$digiPartner == userID,]$doubly <- 2
}
buffer <- data.frame(Grid_ID=buffer[,c('Grid_ID')])
if(nrow(buffer) > 0){buffer$buffer <- 1}
closed <- data.frame(Grid_ID=closed[,c('Grid_ID')])
if(nrow(closed) > 0){closed$closed <- 1}
#   ---- Add in Grid_IDs for which we have information, based on this userID.
#   ---- Also, report cells of interest to the user.
if(nrow(singly) > 0){
grid@data <- merge(grid@data,singly,by=c('Grid_ID'),all.x=TRUE)
if(nrow(singly) == 1){
cat(paste0("Your list of singly-digitized cells includes Grid_ID ",singly$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of singly-digitized cells includes Grid_IDs ",paste0(singly$Grid_ID,collapse=", "),".\n"))
}
cat(paste0(singly$Grid_ID,collapse=", "))
}
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
}
if(nrow(doubly[doubly$doubly == 2,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(buffer) > 0){
grid@data <- merge(grid@data,buffer,by=c('Grid_ID'),all.x=TRUE)
if(nrow(buffer) == 1){
cat(paste0("Your list of buffer cells includes Grid_ID ",buffer$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of buffer cells includes Grid_IDs ",paste0(buffer$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) > 0){
grid@data <- merge(grid@data,closed,by=c('Grid_ID'),all.x=TRUE)
if(nrow(closed) == 1){
cat(paste0("Your list of closed cells includes Grid_ID ",closed$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of closed cells includes Grid_IDs ",paste0(closed$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) == 0 & nrow(buffer) == 0 & nrow(doubly) == 0 & nrow(singly) == 0){
cat("You have nothing to report.  Your Cell's map will be blank.")
}
grid@data[is.na(grid@data)] <- 0
#   ---- Make a simple plot.
par(mar=c(0.5,0.5,2.0,0.5))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
}
getStatus <- function(userID){
# userID <- 100
#   ---- Get the master cell status and master grid.
assign <- getCellStatus()
grid <- readOGR("//lar-file-srv/Data/BTPD_2016/Analysis/data/Shapefiles/BTPD_Grid_CO_Ranked","BTPD_Grid_CO_Ranked",verbose=FALSE)
names <- read.csv("//lar-file-srv/Data/BTPD_2016/Analysis/Database/tblNames.csv",stringsAsFactors=FALSE)
#   ---- Get the first name associated with the userID.
checkUser(userID)
firstName <- names[names$userID == userID,]$FirstName
#   ---- Get the different types of grid cells, based on this userID.
singly <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$openStatus == 0,]
doubly <- assign[( ( assign$digiUserID == userID  & !is.na(assign$digiUserID ) ) |
( assign$digiPartner == userID & !is.na(assign$digiPartner) ) ) & assign$openStatus == 0 & assign$digiDouble == 1 & !is.na(assign$digiDouble),]
buffer <- assign[assign$buffUserID == userID & !is.na(assign$buffUserID),]
closed <- assign[assign$digiUserID == userID & !is.na(assign$digiUserID) & assign$doneStatus == 1,]
#   ---- Manipulate the results of querying into a useful form.
singly <- data.frame(Grid_ID=singly[,c('Grid_ID')])
if(nrow(singly) > 0){singly$singly <- 1}
doubly <- data.frame(Grid_ID=doubly[,c('Grid_ID')],digiUserID=doubly[,c('digiUserID')],digiPartner=doubly[,c('digiPartner')])
if(nrow(doubly) > 0){
#   ---- Identify if a user is primary or secondary for doubly-sampled cells.
#doubly <- data.frame(Grid_ID=c("CO159922","CO114951","CO124423","CO142881","CO134755"),digiUserID=c(100,555,555,100,666),digiPartner=c(345,776,100,345,100))
doubly$doubly <- rep(0,nrow(doubly))
doubly[doubly$digiUserID == userID,]$doubly <- 1
doubly[doubly$digiPartner == userID,]$doubly <- 2
}
buffer <- data.frame(Grid_ID=buffer[,c('Grid_ID')])
if(nrow(buffer) > 0){buffer$buffer <- 1}
closed <- data.frame(Grid_ID=closed[,c('Grid_ID')])
if(nrow(closed) > 0){closed$closed <- 1}
#   ---- Add in Grid_IDs for which we have information, based on this userID.
#   ---- Also, report cells of interest to the user.
if(nrow(singly) > 0){
grid@data <- merge(grid@data,singly,by=c('Grid_ID'),all.x=TRUE)
if(nrow(singly) == 1){
cat(paste0("Your list of singly-digitized cells includes Grid_ID ",singly$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of singly-digitized cells includes Grid_IDs ",paste0(singly$Grid_ID,collapse=", "),".\n"))
}
cat(paste0(singly$Grid_ID,collapse=", "))
}
if(nrow(doubly) > 0){
grid@data <- merge(grid@data,doubly[,c('Grid_ID','doubly')],by=c('Grid_ID'),all.x=TRUE)
if(nrow(doubly[doubly$doubly == 1,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_ID ",doubly[doubly$doubly == 1,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 1,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the primary includes Grid_IDs ",paste0(doubly[doubly$doubly == 1,]$Grid_ID,collapse=", "),".\n"))
}
if(nrow(doubly[doubly$doubly == 2,]) == 1){
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_ID ",doubly[doubly$doubly == 2,]$Grid_ID[1],".\n"))
} else if(nrow(doubly[doubly$doubly == 2,]) > 1) {
cat(paste0("Your list of doubly-digitized cells where you are the secondary includes Grid_IDs ",paste0(doubly[doubly$doubly == 2,]$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(buffer) > 0){
grid@data <- merge(grid@data,buffer,by=c('Grid_ID'),all.x=TRUE)
if(nrow(buffer) == 1){
cat(paste0("Your list of buffer cells includes Grid_ID ",buffer$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of buffer cells includes Grid_IDs ",paste0(buffer$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) > 0){
grid@data <- merge(grid@data,closed,by=c('Grid_ID'),all.x=TRUE)
if(nrow(closed) == 1){
cat(paste0("Your list of closed cells includes Grid_ID ",closed$Grid_ID[1],".\n"))
} else {
cat(paste0("Your list of closed cells includes Grid_IDs ",paste0(closed$Grid_ID,collapse=", "),".\n"))
}
}
if(nrow(closed) == 0 & nrow(buffer) == 0 & nrow(doubly) == 0 & nrow(singly) == 0){
cat("You have nothing to report.  Your Cell's map will be blank.")
}
grid@data[is.na(grid@data)] <- 0
#   ---- Make a simple plot.
par(mar=c(0.5,0.5,2.0,0.5))
plot(grid,main=paste0(firstName,"'s Cells"))
plot(grid[grid@data$singly == 1,],col="blue",add=TRUE)
plot(grid[grid@data$doubly == 1,],col="red",add=TRUE)
plot(grid[grid@data$doubly == 2,],col="orange",add=TRUE)
plot(grid[grid@data$buffer == 1,],col="yellow",add=TRUE)
plot(grid[grid@data$closed == 1,],col="green",add=TRUE)
legend("bottomleft",c('Singly','Doubly -- Primary','Doubly -- Secondary','Buffer','Closed'),border=rep("black",4),fill=c("blue","red","orange","yellow","green"),cex=0.6)
}
dev.off()
getStatus(100)
2/11101*100
devtools::document(())
devtools::document()
